{"id":"node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","dependencies":[{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\package.json","includedInParent":true,"mtime":1663699546899},{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1663699255162},{"name":"../modules/es.regexp.exec","loc":{"line":3,"column":8,"index":88},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\es.regexp.exec.js"},{"name":"../internals/function-uncurry-this","loc":{"line":4,"column":26,"index":144},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/define-built-in","loc":{"line":5,"column":28,"index":211},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\define-built-in.js"},{"name":"../internals/regexp-exec","loc":{"line":6,"column":25,"index":269},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js"},{"name":"../internals/fails","loc":{"line":7,"column":20,"index":318},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/well-known-symbol","loc":{"line":8,"column":30,"index":371},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\well-known-symbol.js"},{"name":"../internals/create-non-enumerable-property","loc":{"line":9,"column":42,"index":448},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\create-non-enumerable-property.js"}],"generated":{"js":"'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var uncurriedNativeMethod = uncurryThis(nativeMethod);\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };\n        }\n        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    defineBuiltIn(String.prototype, KEY, methods[0]);\n    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n"},"sourceMaps":null,"error":null,"hash":"a17b27fc379e89b0504f8cd63e27161e","cacheData":{"env":{}}}