{"id":"node_modules/core-js/internals/regexp-exec.js","dependencies":[{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\package.json","includedInParent":true,"mtime":1663699546899},{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1663699255162},{"name":"../internals/function-call","loc":{"line":4,"column":19,"index":202},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\function-call.js"},{"name":"../internals/function-uncurry-this","loc":{"line":5,"column":26,"index":259},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/to-string","loc":{"line":6,"column":23,"index":321},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/regexp-flags","loc":{"line":7,"column":26,"index":374},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-flags.js"},{"name":"../internals/regexp-sticky-helpers","loc":{"line":8,"column":28,"index":432},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-sticky-helpers.js"},{"name":"../internals/shared","loc":{"line":9,"column":21,"index":492},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\shared.js"},{"name":"../internals/object-create","loc":{"line":10,"column":21,"index":537},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\object-create.js"},{"name":"../internals/internal-state","loc":{"line":11,"column":31,"index":599},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\internal-state.js"},{"name":"../internals/regexp-unsupported-dot-all","loc":{"line":12,"column":34,"index":669},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-unsupported-dot-all.js"},{"name":"../internals/regexp-unsupported-ncg","loc":{"line":13,"column":30,"index":743},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-exec.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-unsupported-ncg.js"}],"generated":{"js":"'use strict';\n/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar regexpFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar shared = require('../internals/shared');\nvar create = require('../internals/object-create');\nvar getInternalState = require('../internals/internal-state').get;\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');\n\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(''.charAt);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  call(nativeExec, re1, 'a');\n  call(nativeExec, re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\n\nif (PATCH) {\n  patchedExec = function exec(string) {\n    var re = this;\n    var state = getInternalState(re);\n    var str = toString(string);\n    var raw = state.raw;\n    var result, reCopy, lastIndex, match, i, object, group;\n\n    if (raw) {\n      raw.lastIndex = re.lastIndex;\n      result = call(patchedExec, raw, str);\n      re.lastIndex = raw.lastIndex;\n      return result;\n    }\n\n    var groups = state.groups;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = call(regexpFlags, re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = replace(flags, 'y', '');\n      if (indexOf(flags, 'g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = stringSlice(str, re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = call(nativeExec, sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = stringSlice(match.input, charsAdded);\n        match[0] = stringSlice(match[0], charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/\n      call(nativeReplace, match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    if (match && groups) {\n      match.groups = object = create(null);\n      for (i = 0; i < groups.length; i++) {\n        group = groups[i];\n        object[group[0]] = match[group[1]];\n      }\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n"},"sourceMaps":null,"error":null,"hash":"3730c88f6e30c6247062e279fd6e6b22","cacheData":{"env":{}}}