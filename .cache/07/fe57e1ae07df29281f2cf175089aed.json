{"id":"node_modules/core-js/modules/web.structured-clone.js","dependencies":[{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\package.json","includedInParent":true,"mtime":1663699546899},{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1663699255162},{"name":"../internals/is-pure","loc":{"line":1,"column":22,"index":22},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\is-pure.js"},{"name":"../internals/export","loc":{"line":2,"column":16,"index":63},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/global","loc":{"line":3,"column":21,"index":108},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\global.js"},{"name":"../internals/get-built-in","loc":{"line":4,"column":25,"index":157},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\get-built-in.js"},{"name":"../internals/function-uncurry-this","loc":{"line":5,"column":26,"index":213},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/fails","loc":{"line":6,"column":20,"index":272},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\fails.js"},{"name":"../internals/uid","loc":{"line":7,"column":18,"index":313},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\uid.js"},{"name":"../internals/is-callable","loc":{"line":8,"column":25,"index":359},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\is-callable.js"},{"name":"../internals/is-constructor","loc":{"line":9,"column":28,"index":416},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\is-constructor.js"},{"name":"../internals/is-null-or-undefined","loc":{"line":10,"column":32,"index":480},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\is-null-or-undefined.js"},{"name":"../internals/is-object","loc":{"line":11,"column":23,"index":541},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\is-object.js"},{"name":"../internals/is-symbol","loc":{"line":12,"column":23,"index":591},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\is-symbol.js"},{"name":"../internals/iterate","loc":{"line":13,"column":22,"index":640},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\iterate.js"},{"name":"../internals/an-object","loc":{"line":14,"column":23,"index":688},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\an-object.js"},{"name":"../internals/classof","loc":{"line":15,"column":22,"index":737},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\classof.js"},{"name":"../internals/has-own-property","loc":{"line":16,"column":21,"index":783},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\has-own-property.js"},{"name":"../internals/create-property","loc":{"line":17,"column":29,"index":846},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\create-property.js"},{"name":"../internals/create-non-enumerable-property","loc":{"line":18,"column":42,"index":921},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\create-non-enumerable-property.js"},{"name":"../internals/length-of-array-like","loc":{"line":19,"column":32,"index":1001},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\length-of-array-like.js"},{"name":"../internals/validate-arguments-length","loc":{"line":20,"column":38,"index":1077},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\validate-arguments-length.js"},{"name":"../internals/regexp-get-flags","loc":{"line":21,"column":29,"index":1149},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\regexp-get-flags.js"},{"name":"../internals/error-stack-installable","loc":{"line":22,"column":38,"index":1221},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\error-stack-installable.js"},{"name":"../internals/engine-v8-version","loc":{"line":23,"column":17,"index":1279},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\engine-v8-version.js"},{"name":"../internals/engine-is-browser","loc":{"line":24,"column":25,"index":1339},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\engine-is-browser.js"},{"name":"../internals/engine-is-deno","loc":{"line":25,"column":22,"index":1396},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\engine-is-deno.js"},{"name":"../internals/engine-is-node","loc":{"line":26,"column":22,"index":1450},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\modules\\web.structured-clone.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\engine-is-node.js"}],"generated":{"js":"\nvar IS_PURE = require('../internals/is-pure');\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltin = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar uid = require('../internals/uid');\nvar isCallable = require('../internals/is-callable');\nvar isConstructor = require('../internals/is-constructor');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar iterate = require('../internals/iterate');\nvar anObject = require('../internals/an-object');\nvar classof = require('../internals/classof');\nvar hasOwn = require('../internals/has-own-property');\nvar createProperty = require('../internals/create-property');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\nvar V8 = require('../internals/engine-v8-version');\nvar IS_BROWSER = require('../internals/engine-is-browser');\nvar IS_DENO = require('../internals/engine-is-deno');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar Object = global.Object;\nvar Date = global.Date;\nvar Error = global.Error;\nvar EvalError = global.EvalError;\nvar RangeError = global.RangeError;\nvar ReferenceError = global.ReferenceError;\nvar SyntaxError = global.SyntaxError;\nvar TypeError = global.TypeError;\nvar URIError = global.URIError;\nvar PerformanceMark = global.PerformanceMark;\nvar WebAssembly = global.WebAssembly;\nvar CompileError = WebAssembly && WebAssembly.CompileError || Error;\nvar LinkError = WebAssembly && WebAssembly.LinkError || Error;\nvar RuntimeError = WebAssembly && WebAssembly.RuntimeError || Error;\nvar DOMException = getBuiltin('DOMException');\nvar Set = getBuiltin('Set');\nvar Map = getBuiltin('Map');\nvar MapPrototype = Map.prototype;\nvar mapHas = uncurryThis(MapPrototype.has);\nvar mapGet = uncurryThis(MapPrototype.get);\nvar mapSet = uncurryThis(MapPrototype.set);\nvar setAdd = uncurryThis(Set.prototype.add);\nvar objectKeys = getBuiltin('Object', 'keys');\nvar push = uncurryThis([].push);\nvar thisBooleanValue = uncurryThis(true.valueOf);\nvar thisNumberValue = uncurryThis(1.0.valueOf);\nvar thisStringValue = uncurryThis(''.valueOf);\nvar thisTimeValue = uncurryThis(Date.prototype.getTime);\nvar PERFORMANCE_MARK = uid('structuredClone');\nvar DATA_CLONE_ERROR = 'DataCloneError';\nvar TRANSFERRING = 'Transferring';\n\nvar checkBasicSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var set1 = new global.Set([7]);\n    var set2 = structuredCloneImplementation(set1);\n    var number = structuredCloneImplementation(Object(7));\n    return set2 == set1 || !set2.has(7) || typeof number != 'object' || number != 7;\n  }) && structuredCloneImplementation;\n};\n\nvar checkErrorsCloning = function (structuredCloneImplementation, $Error) {\n  return !fails(function () {\n    var error = new $Error();\n    var test = structuredCloneImplementation({ a: error, b: error });\n    return !(test && test.a === test.b && test.a instanceof $Error && test.a.stack === error.stack);\n  });\n};\n\n// https://github.com/whatwg/html/pull/5749\nvar checkNewErrorsCloningSemantic = function (structuredCloneImplementation) {\n  return !fails(function () {\n    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, { cause: 3 }));\n    return test.name != 'AggregateError' || test.errors[0] != 1 || test.message != PERFORMANCE_MARK || test.cause != 3;\n  });\n};\n\n// FF94+, Safari 15.4+, Chrome 98+, NodeJS 17.0+, Deno 1.13+\n// FF<103 and Safari implementations can't clone errors\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n// FF103 can clone errors, but `.stack` of clone is an empty string\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1778762\n// FF104+ fixed it on usual errors, but not on DOMExceptions\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1777321\n// Chrome <102 returns `null` if cloned object contains multiple references to one error\n// https://bugs.chromium.org/p/v8/issues/detail?id=12542\n// NodeJS implementation can't clone DOMExceptions\n// https://github.com/nodejs/node/issues/41038\n// only FF103+ supports new (html/5749) error cloning semantic\nvar nativeStructuredClone = global.structuredClone;\n\nvar FORCED_REPLACEMENT = IS_PURE\n  || !checkErrorsCloning(nativeStructuredClone, Error)\n  || !checkErrorsCloning(nativeStructuredClone, DOMException)\n  || !checkNewErrorsCloningSemantic(nativeStructuredClone);\n\n// Chrome 82+, Safari 14.1+, Deno 1.11+\n// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`\n// Chrome returns `null` if cloned object contains multiple references to one error\n// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround\n// Safari implementation can't clone errors\n// Deno 1.2-1.10 implementations too naive\n// NodeJS 16.0+ does not have `PerformanceMark` constructor\n// NodeJS <17.2 structured cloning implementation from `performance.mark` is too naive\n// and can't clone, for example, `RegExp` or some boxed primitives\n// https://github.com/nodejs/node/issues/40840\n// no one of those implementations supports new (html/5749) error cloning semantic\nvar structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {\n  return new PerformanceMark(PERFORMANCE_MARK, { detail: value }).detail;\n});\n\nvar nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;\n\nvar throwUncloneable = function (type) {\n  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);\n};\n\nvar throwUnpolyfillable = function (type, action) {\n  throw new DOMException((action || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);\n};\n\nvar createDataTransfer = function () {\n  var dataTransfer;\n  try {\n    dataTransfer = new global.DataTransfer();\n  } catch (error) {\n    try {\n      dataTransfer = new global.ClipboardEvent('').clipboardData;\n    } catch (error2) { /* empty */ }\n  }\n  return dataTransfer && dataTransfer.items && dataTransfer.files ? dataTransfer : null;\n};\n\nvar structuredCloneInternal = function (value, map) {\n  if (isSymbol(value)) throwUncloneable('Symbol');\n  if (!isObject(value)) return value;\n  // effectively preserves circular references\n  if (map) {\n    if (mapHas(map, value)) return mapGet(map, value);\n  } else map = new Map();\n\n  var type = classof(value);\n  var deep = false;\n  var C, name, cloned, dataTransfer, i, length, keys, key, source, target;\n\n  switch (type) {\n    case 'Array':\n      cloned = [];\n      deep = true;\n      break;\n    case 'Object':\n      cloned = {};\n      deep = true;\n      break;\n    case 'Map':\n      cloned = new Map();\n      deep = true;\n      break;\n    case 'Set':\n      cloned = new Set();\n      deep = true;\n      break;\n    case 'RegExp':\n      // in this block because of a Safari 14.1 bug\n      // old FF does not clone regexes passed to the constructor, so get the source and flags directly\n      cloned = new RegExp(value.source, getRegExpFlags(value));\n      break;\n    case 'Error':\n      name = value.name;\n      switch (name) {\n        case 'AggregateError':\n          cloned = getBuiltin('AggregateError')([]);\n          break;\n        case 'EvalError':\n          cloned = EvalError();\n          break;\n        case 'RangeError':\n          cloned = RangeError();\n          break;\n        case 'ReferenceError':\n          cloned = ReferenceError();\n          break;\n        case 'SyntaxError':\n          cloned = SyntaxError();\n          break;\n        case 'TypeError':\n          cloned = TypeError();\n          break;\n        case 'URIError':\n          cloned = URIError();\n          break;\n        case 'CompileError':\n          cloned = CompileError();\n          break;\n        case 'LinkError':\n          cloned = LinkError();\n          break;\n        case 'RuntimeError':\n          cloned = RuntimeError();\n          break;\n        default:\n          cloned = Error();\n      }\n      deep = true;\n      break;\n    case 'DOMException':\n      cloned = new DOMException(value.message, value.name);\n      deep = true;\n      break;\n    case 'DataView':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      C = global[type];\n      // in some old engines like Safari 9, typeof C is 'object'\n      // on Uint8ClampedArray or some other constructors\n      if (!isObject(C)) throwUnpolyfillable(type);\n      cloned = new C(\n        // this is safe, since arraybuffer cannot have circular references\n        structuredCloneInternal(value.buffer, map),\n        value.byteOffset,\n        type === 'DataView' ? value.byteLength : value.length\n      );\n      break;\n    case 'DOMQuad':\n      try {\n        cloned = new DOMQuad(\n          structuredCloneInternal(value.p1, map),\n          structuredCloneInternal(value.p2, map),\n          structuredCloneInternal(value.p3, map),\n          structuredCloneInternal(value.p4, map)\n        );\n      } catch (error) {\n        if (nativeRestrictedStructuredClone) {\n          cloned = nativeRestrictedStructuredClone(value);\n        } else throwUnpolyfillable(type);\n      }\n      break;\n    case 'FileList':\n      dataTransfer = createDataTransfer();\n      if (dataTransfer) {\n        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {\n          dataTransfer.items.add(structuredCloneInternal(value[i], map));\n        }\n        cloned = dataTransfer.files;\n      } else if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else throwUnpolyfillable(type);\n      break;\n    case 'ImageData':\n      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'\n      try {\n        cloned = new ImageData(\n          structuredCloneInternal(value.data, map),\n          value.width,\n          value.height,\n          { colorSpace: value.colorSpace }\n        );\n      } catch (error) {\n        if (nativeRestrictedStructuredClone) {\n          cloned = nativeRestrictedStructuredClone(value);\n        } else throwUnpolyfillable(type);\n      } break;\n    default:\n      if (nativeRestrictedStructuredClone) {\n        cloned = nativeRestrictedStructuredClone(value);\n      } else switch (type) {\n        case 'BigInt':\n          // can be a 3rd party polyfill\n          cloned = Object(value.valueOf());\n          break;\n        case 'Boolean':\n          cloned = Object(thisBooleanValue(value));\n          break;\n        case 'Number':\n          cloned = Object(thisNumberValue(value));\n          break;\n        case 'String':\n          cloned = Object(thisStringValue(value));\n          break;\n        case 'Date':\n          cloned = new Date(thisTimeValue(value));\n          break;\n        case 'ArrayBuffer':\n          C = global.DataView;\n          // `ArrayBuffer#slice` is not available in IE10\n          // `ArrayBuffer#slice` and `DataView` are not available in old FF\n          if (!C && typeof value.slice != 'function') throwUnpolyfillable(type);\n          // detached buffers throws in `DataView` and `.slice`\n          try {\n            if (typeof value.slice == 'function') {\n              cloned = value.slice(0);\n            } else {\n              length = value.byteLength;\n              cloned = new ArrayBuffer(length);\n              source = new C(value);\n              target = new C(cloned);\n              for (i = 0; i < length; i++) {\n                target.setUint8(i, source.getUint8(i));\n              }\n            }\n          } catch (error) {\n            throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);\n          } break;\n        case 'SharedArrayBuffer':\n          // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original\n          cloned = value;\n          break;\n        case 'Blob':\n          try {\n            cloned = value.slice(0, value.size, value.type);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMPoint':\n        case 'DOMPointReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromPoint\n              ? C.fromPoint(value)\n              : new C(value.x, value.y, value.z, value.w);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMRect':\n        case 'DOMRectReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromRect\n              ? C.fromRect(value)\n              : new C(value.x, value.y, value.width, value.height);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'DOMMatrix':\n        case 'DOMMatrixReadOnly':\n          C = global[type];\n          try {\n            cloned = C.fromMatrix\n              ? C.fromMatrix(value)\n              : new C(value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'AudioData':\n        case 'VideoFrame':\n          if (!isCallable(value.clone)) throwUnpolyfillable(type);\n          try {\n            cloned = value.clone();\n          } catch (error) {\n            throwUncloneable(type);\n          } break;\n        case 'File':\n          try {\n            cloned = new File([value], value.name, value);\n          } catch (error) {\n            throwUnpolyfillable(type);\n          } break;\n        case 'CryptoKey':\n        case 'GPUCompilationMessage':\n        case 'GPUCompilationInfo':\n        case 'ImageBitmap':\n        case 'RTCCertificate':\n        case 'WebAssembly.Module':\n          throwUnpolyfillable(type);\n          // break omitted\n        default:\n          throwUncloneable(type);\n      }\n  }\n\n  mapSet(map, value, cloned);\n\n  if (deep) switch (type) {\n    case 'Array':\n    case 'Object':\n      keys = objectKeys(value);\n      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {\n        key = keys[i];\n        createProperty(cloned, key, structuredCloneInternal(value[key], map));\n      } break;\n    case 'Map':\n      value.forEach(function (v, k) {\n        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Set':\n      value.forEach(function (v) {\n        setAdd(cloned, structuredCloneInternal(v, map));\n      });\n      break;\n    case 'Error':\n      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));\n      if (hasOwn(value, 'cause')) {\n        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));\n      }\n      if (name == 'AggregateError') {\n        cloned.errors = structuredCloneInternal(value.errors, map);\n      } // break omitted\n    case 'DOMException':\n      if (ERROR_STACK_INSTALLABLE) {\n        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));\n      }\n  }\n\n  return cloned;\n};\n\nvar PROPER_TRANSFER = nativeStructuredClone && !fails(function () {\n  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if ((IS_DENO && V8 > 92) || (IS_NODE && V8 > 94) || (IS_BROWSER && V8 > 97)) return false;\n  var buffer = new ArrayBuffer(8);\n  var clone = nativeStructuredClone(buffer, { transfer: [buffer] });\n  return buffer.byteLength != 0 || clone.byteLength != 8;\n});\n\nvar tryToTransfer = function (rawTransfer, map) {\n  if (!isObject(rawTransfer)) throw TypeError('Transfer option cannot be converted to a sequence');\n\n  var transfer = [];\n\n  iterate(rawTransfer, function (value) {\n    push(transfer, anObject(value));\n  });\n\n  var i = 0;\n  var length = lengthOfArrayLike(transfer);\n  var value, type, C, transferredArray, transferred, canvas, context;\n\n  if (PROPER_TRANSFER) {\n    transferredArray = nativeStructuredClone(transfer, { transfer: transfer });\n    while (i < length) mapSet(map, transfer[i], transferredArray[i++]);\n  } else while (i < length) {\n    value = transfer[i++];\n    if (mapHas(map, value)) throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);\n\n    type = classof(value);\n\n    switch (type) {\n      case 'ImageBitmap':\n        C = global.OffscreenCanvas;\n        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          canvas = new C(value.width, value.height);\n          context = canvas.getContext('bitmaprenderer');\n          context.transferFromImageBitmap(value);\n          transferred = canvas.transferToImageBitmap();\n        } catch (error) { /* empty */ }\n        break;\n      case 'AudioData':\n      case 'VideoFrame':\n        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);\n        try {\n          transferred = value.clone();\n          value.close();\n        } catch (error) { /* empty */ }\n        break;\n      case 'ArrayBuffer':\n      case 'MessagePort':\n      case 'OffscreenCanvas':\n      case 'ReadableStream':\n      case 'TransformStream':\n      case 'WritableStream':\n        throwUnpolyfillable(type, TRANSFERRING);\n    }\n\n    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);\n    mapSet(map, value, transferred);\n  }\n};\n\n$({ global: true, enumerable: true, sham: !PROPER_TRANSFER, forced: FORCED_REPLACEMENT }, {\n  structuredClone: function structuredClone(value /* , { transfer } */) {\n    var options = validateArgumentsLength(arguments.length, 1) > 1 && !isNullOrUndefined(arguments[1]) ? anObject(arguments[1]) : undefined;\n    var transfer = options ? options.transfer : undefined;\n    var map;\n\n    if (transfer !== undefined) {\n      map = new Map();\n      tryToTransfer(transfer, map);\n    }\n\n    return structuredCloneInternal(value, map);\n  }\n});\n"},"sourceMaps":null,"error":null,"hash":"eb6fb886268f15bd2013cfe4db7463a1","cacheData":{"env":{}}}