{"id":"node_modules/core-js/internals/string-trim.js","dependencies":[{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\package.json","includedInParent":true,"mtime":1663699546899},{"name":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1663699255162},{"name":"../internals/function-uncurry-this","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\string-trim.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\function-uncurry-this.js"},{"name":"../internals/require-object-coercible","loc":{"line":2,"column":37,"index":102},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\string-trim.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\require-object-coercible.js"},{"name":"../internals/to-string","loc":{"line":3,"column":23,"index":167},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\string-trim.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/whitespaces","loc":{"line":4,"column":26,"index":220},"parent":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\string-trim.js","resolved":"C:\\Users\\mibe0521\\Desktop\\yandex_practicum\\yandex_practicum\\node_modules\\core-js\\internals\\whitespaces.js"}],"generated":{"js":"var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n"},"sourceMaps":null,"error":null,"hash":"b13226323c8d0bc402a137b394f62bcb","cacheData":{"env":{}}}